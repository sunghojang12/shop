/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.54
 * Generated at: 2021-12-27 05:04:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/Mtest/shop/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/VamPa/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1637203822798L));
    _jspx_dependants.put("jar:file:/C:/Mtest/shop/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/VamPa/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n");
      out.write("<title>회원가입</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../resources/css/main1.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/resources/css/member/join.css\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"../resources/css/bootstrap4.4.1/bootstrap.min.css\">\r\n");
      out.write("\r\n");
      out.write("<script src=\"../resources/js/main.js\" defer></script>	\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.4.1.js\"\r\n");
      out.write("	integrity=\"sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU=\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<!-- Navbar -->\r\n");
      out.write("	<nav id=\"navbar\">\r\n");
      out.write("		<div class=\"navbar__logo\">\r\n");
      out.write("			<img src=\"../resources/img/logo.png\" class=\"home__a\" />KYAS\r\n");
      out.write("		</div>\r\n");
      out.write("		<ul class=\"navbar__menu\">\r\n");
      out.write("			");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("			");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("		</ul>\r\n");
      out.write("\r\n");
      out.write("		<!-- header -->\r\n");
      out.write("		<button class=\"navbar__toggle-btn\">\r\n");
      out.write("			<i class=\"fas fa-bars\"></i>>\r\n");
      out.write("		</button>\r\n");
      out.write("	</nav>\r\n");
      out.write("	<section id=\"home\">\r\n");
      out.write("		<div class=\"home__container\">\r\n");
      out.write("			<img src=\"../resources/img/main.jpg\" class=\"home__avatar\" />\r\n");
      out.write("			<h2 class=\"home__title\">\r\n");
      out.write("				Hello, <br />We provide you with any alcohol you want.\r\n");
      out.write("			</h2>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</section>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"section__container2\">\r\n");
      out.write("		<div class=\"wrapper\">\r\n");
      out.write("			<form id=\"join_form\" method=\"post\">\r\n");
      out.write("				<div class=\"wrap\">\r\n");
      out.write("					<div class=\"subjecet\">\r\n");
      out.write("						<span>회원가입</span>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"id_wrap\">\r\n");
      out.write("						<div class=\"id_name\">아이디</div>\r\n");
      out.write("						<div class=\"id_input_box\" style=\"padding-top: 0px; padding-bottom: 0px;\">\r\n");
      out.write("							<input class=\"id_input\" placeholder=\"ID를 입력하세요\" name=\"memberId\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<span class=\"id_input_re_1\">사용 가능한 아이디입니다.</span> <span\r\n");
      out.write("							class=\"id_input_re_2\">아이디가 이미 존재합니다.</span> <span\r\n");
      out.write("							class=\"final_id_ck\">아이디를 입력해주세요.</span>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"pw_wrap\">\r\n");
      out.write("						<div class=\"pw_name\">비밀번호</div>\r\n");
      out.write("						<div class=\"pw_input_box\" style=\"padding-top: 0px; padding-bottom: 0px;\">\r\n");
      out.write("							<input type=\"password\" class=\"pw_input\" name=\"memberPw\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<span class=\"final_pw_ck\">비밀번호를 입력해주세요.</span>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"pwck_wrap\">\r\n");
      out.write("						<div class=\"pwck_name\">비밀번호 확인</div>\r\n");
      out.write("						<div class=\"pwck_input_box\" style=\"padding-top: 0px; padding-bottom: 0px;\">\r\n");
      out.write("							<input type=\"password\" class=\"pwck_input\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<span class=\"final_pwck_ck\">비밀번호 확인을 입력해주세요.</span> <span\r\n");
      out.write("							class=\"pwck_input_re_1\">비밀번호가 일치합니다.</span> <span\r\n");
      out.write("							class=\"pwck_input_re_2\">비밀번호가 일치하지 않습니다.</span>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"user_wrap\">\r\n");
      out.write("						<div class=\"user_name\">이름</div>\r\n");
      out.write("						<div class=\"user_input_box\" style=\"padding-top: 0px; padding-bottom: 0px;\">\r\n");
      out.write("							<input class=\"user_input\" name=\"memberName\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<span class=\"final_name_ck\">이름을 입력해주세요.</span>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"mail_wrap\">\r\n");
      out.write("						<div class=\"mail_name\">이메일</div>\r\n");
      out.write("						<div class=\"mail_input_box\" style=\"padding-top: 0px; padding-bottom: 0px;\">\r\n");
      out.write("							<input class=\"mail_input\" name=\"memberMail\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<span class=\"final_mail_ck\">이메일을 입력해주세요.</span>\r\n");
      out.write("						<sapn class=\"mail_input_box_warn\"></sapn>\r\n");
      out.write("						<div class=\"mail_check_wrap\">\r\n");
      out.write("							<div class=\"mail_check_input_box\" id=\"mail_check_input_box_false\" style=\"padding-top: 0px; padding-bottom: 0px;\">\r\n");
      out.write("								<input class=\"mail_check_input\" disabled=\"disabled\">\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"mail_check_button\">\r\n");
      out.write("								<span>인증번호 전송</span>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"clearfix\"></div>\r\n");
      out.write("							<span id=\"mail_check_input_box_warn\"></span>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"address_wrap\">\r\n");
      out.write("						<div class=\"address_name\">주소</div>\r\n");
      out.write("						<div class=\"address_input_1_wrap\">\r\n");
      out.write("							<div class=\"address_input_1_box\" style=\"padding-top: 0px; padding-bottom: 0px;\">\r\n");
      out.write("								<input class=\"address_input_1\" name=\"memberAddr1\"\r\n");
      out.write("									readonly=\"readonly\">\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"address_button\" onclick=\"execution_daum_address()\">\r\n");
      out.write("								<span>주소 찾기</span>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"clearfix\"></div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"address_input_2_wrap\">\r\n");
      out.write("							<div class=\"address_input_2_box\" style=\"padding-top: 0px; padding-bottom: 0px;\">\r\n");
      out.write("								<input class=\"address_input_2\" name=\"memberAddr2\"\r\n");
      out.write("									readonly=\"readonly\">\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"address_input_3_wrap\">\r\n");
      out.write("							<div class=\"address_input_3_box\" style=\"padding-top: 0px; padding-bottom: 0px;\">\r\n");
      out.write("								<input class=\"address_input_3\" name=\"memberAddr3\"\r\n");
      out.write("									readonly=\"readonly\">\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<span class=\"final_addr_ck\">주소를 입력해주세요.</span>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"join_button_wrap\">\r\n");
      out.write("						<input type=\"button\" class=\"join_button\" value=\"가입하기\">\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<!-- Footer 영역 -->\r\n");
      out.write("\r\n");
      out.write("	<!-- class=\"footer_nav\" -->\r\n");
      out.write("	<section id=\"contact\" class=\"section\">\r\n");
      out.write("\r\n");
      out.write("		<h2 class=\"contact__email\">bit.kipping@gmail.com</h2>\r\n");
      out.write("		<div class=\"contact__links\">\r\n");
      out.write("			<a href=\"https://github.com/dream-ellie\" target=\"_blank\"> <i\r\n");
      out.write("				class=\"fab fa-github\"></i>\r\n");
      out.write("			</a> <a href=\"#\" target=\"_blank\"> <i class=\"fa fa-linkedin-square\"></i>\r\n");
      out.write("			</a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<p class=\"contact__rights\">\r\n");
      out.write("			(주) Vam alchoal 대표이사 : 다이노 <br> 사업자등록번호 : o11-123-56789 <br>\r\n");
      out.write("			대표전화 : 1440-2293(발신자 부담전화) <br> <br> COPYRIGHT(C) <strong>bit.camp.com</strong>\r\n");
      out.write("			ALL RIGHTS RESERVED.\r\n");
      out.write("		</p>\r\n");
      out.write("	</section>\r\n");
      out.write("	<!-- class=\"footer\" -->\r\n");
      out.write("\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("	<script>\r\n");
      out.write("		var code = \"\"; //이메일전송 인증번호 저장위한 코드\r\n");
      out.write("		/* 유효성 검사 통과유무 변수 */\r\n");
      out.write("		var idCheck = false; // 아이디\r\n");
      out.write("		var idckCheck = false; // 아이디 중복 검사\r\n");
      out.write("		var pwCheck = false; // 비번\r\n");
      out.write("		var pwckCheck = false; // 비번 확인\r\n");
      out.write("		var pwckcorCheck = false; // 비번 확인 일치 확인\r\n");
      out.write("		var nameCheck = false; // 이름\r\n");
      out.write("		var mailCheck = false; // 이메일\r\n");
      out.write("		var mailnumCheck = false; // 이메일 인증번호 확인\r\n");
      out.write("		var addressCheck = false // 주소\r\n");
      out.write("		$(document)\r\n");
      out.write("				.ready(\r\n");
      out.write("						function() {\r\n");
      out.write("							//회원가입 버튼(회원가입 기능 작동)\r\n");
      out.write("							$(\".join_button\")\r\n");
      out.write("									.click(\r\n");
      out.write("											function() {\r\n");
      out.write("\r\n");
      out.write("												/* 입력값 변수 */\r\n");
      out.write("												var id = $('.id_input').val(); // id 입력란\r\n");
      out.write("												var pw = $('.pw_input').val(); // 비밀번호 입력란\r\n");
      out.write("												var pwck = $('.pwck_input')\r\n");
      out.write("														.val(); // 비밀번호 확인 입력란\r\n");
      out.write("												var name = $('.user_input')\r\n");
      out.write("														.val(); // 이름 입력란\r\n");
      out.write("												var mail = $('.mail_input')\r\n");
      out.write("														.val(); // 이메일 입력란\r\n");
      out.write("												var addr = $('.address_input_3')\r\n");
      out.write("														.val(); // 주소 입력란\r\n");
      out.write("\r\n");
      out.write("												/* 아이디 유효성검사 */\r\n");
      out.write("												if (id == \"\") {\r\n");
      out.write("													$('.final_id_ck').css(\r\n");
      out.write("															'display', 'block');\r\n");
      out.write("													idCheck = false;\r\n");
      out.write("												} else {\r\n");
      out.write("													$('.final_id_ck').css(\r\n");
      out.write("															'display', 'none');\r\n");
      out.write("													idCheck = true;\r\n");
      out.write("												}\r\n");
      out.write("\r\n");
      out.write("												/* 비밀번호 유효성 검사 */\r\n");
      out.write("												if (pw == \"\") {\r\n");
      out.write("													$('.final_pw_ck').css(\r\n");
      out.write("															'display', 'block');\r\n");
      out.write("													pwCheck = false;\r\n");
      out.write("												} else {\r\n");
      out.write("													$('.final_pw_ck').css(\r\n");
      out.write("															'display', 'none');\r\n");
      out.write("													pwCheck = true;\r\n");
      out.write("												}\r\n");
      out.write("\r\n");
      out.write("												/* 비밀번호 확인 유효성 검사 */\r\n");
      out.write("												if (pwck == \"\") {\r\n");
      out.write("													$('.final_pwck_ck').css(\r\n");
      out.write("															'display', 'block');\r\n");
      out.write("													pwckCheck = false;\r\n");
      out.write("												} else {\r\n");
      out.write("													$('.final_pwck_ck').css(\r\n");
      out.write("															'display', 'none');\r\n");
      out.write("													pwckCheck = true;\r\n");
      out.write("												}\r\n");
      out.write("\r\n");
      out.write("												/* 이름 유효성 검사 */\r\n");
      out.write("												if (name == \"\") {\r\n");
      out.write("													$('.final_name_ck').css(\r\n");
      out.write("															'display', 'block');\r\n");
      out.write("													nameCheck = false;\r\n");
      out.write("												} else {\r\n");
      out.write("													$('.final_name_ck').css(\r\n");
      out.write("															'display', 'none');\r\n");
      out.write("													nameCheck = true;\r\n");
      out.write("												}\r\n");
      out.write("\r\n");
      out.write("												/* 이메일 유효성 검사 */\r\n");
      out.write("												if (mail == \"\") {\r\n");
      out.write("													$('.final_mail_ck').css(\r\n");
      out.write("															'display', 'block');\r\n");
      out.write("													mailCheck = false;\r\n");
      out.write("												} else {\r\n");
      out.write("													$('.final_mail_ck').css(\r\n");
      out.write("															'display', 'none');\r\n");
      out.write("													mailCheck = true;\r\n");
      out.write("												}\r\n");
      out.write("\r\n");
      out.write("												/* 주소 유효성 검사 */\r\n");
      out.write("												if (addr == \"\") {\r\n");
      out.write("													$('.final_addr_ck').css(\r\n");
      out.write("															'display', 'block');\r\n");
      out.write("													addressCheck = false;\r\n");
      out.write("												} else {\r\n");
      out.write("													$('.final_addr_ck').css(\r\n");
      out.write("															'display', 'none');\r\n");
      out.write("													addressCheck = true;\r\n");
      out.write("												}\r\n");
      out.write("\r\n");
      out.write("												/* 최종 유효성 검사 */\r\n");
      out.write("												if (idCheck && idckCheck\r\n");
      out.write("														&& pwCheck && pwckCheck\r\n");
      out.write("														&& pwckcorCheck\r\n");
      out.write("														&& nameCheck\r\n");
      out.write("														&& mailCheck\r\n");
      out.write("														&& mailnumCheck\r\n");
      out.write("														&& addressCheck) {\r\n");
      out.write("													$(\"#join_form\").attr(\r\n");
      out.write("															\"action\",\r\n");
      out.write("															\"/member/join\");\r\n");
      out.write("													$(\"#join_form\").submit();\r\n");
      out.write("\r\n");
      out.write("												}\r\n");
      out.write("\r\n");
      out.write("												return false;\r\n");
      out.write("											});\r\n");
      out.write("						});\r\n");
      out.write("		//아이디 중복검사\r\n");
      out.write("		$('.id_input').on(\r\n");
      out.write("				\"propertychange change keyup paste input\",\r\n");
      out.write("				function() {\r\n");
      out.write("					/* console.log(\"keyup 테스트\"); */\r\n");
      out.write("\r\n");
      out.write("					var memberId = $('.id_input').val(); // .id_input에 입력되는 값\r\n");
      out.write("					var data = {\r\n");
      out.write("						memberId : memberId\r\n");
      out.write("					} // '컨트롤에 넘길 데이터 이름' : '데이터(.id_input에 입력되는 값)'\r\n");
      out.write("\r\n");
      out.write("					$.ajax({\r\n");
      out.write("						type : \"post\",\r\n");
      out.write("						url : \"/member/memberIdChk\",\r\n");
      out.write("						data : data,\r\n");
      out.write("						success : function(result) {\r\n");
      out.write("							// console.log(\"성공 여부\" + result);\r\n");
      out.write("							if (result != 'fail') {\r\n");
      out.write("								$('.id_input_re_1').css(\"display\",\r\n");
      out.write("										\"inline-block\");\r\n");
      out.write("								$('.id_input_re_2').css(\"display\", \"none\");\r\n");
      out.write("								idckCheck = true;\r\n");
      out.write("							} else {\r\n");
      out.write("								$('.id_input_re_2').css(\"display\",\r\n");
      out.write("										\"inline-block\");\r\n");
      out.write("								$('.id_input_re_1').css(\"display\", \"none\");\r\n");
      out.write("								idckCheck = false;\r\n");
      out.write("							}\r\n");
      out.write("						}// success 종료\r\n");
      out.write("					}); // ajax 종료	\r\n");
      out.write("				});// function 종료\r\n");
      out.write("		/* 인증번호 이메일 전송 */\r\n");
      out.write("\r\n");
      out.write("		$(\".mail_check_button\").click(function() {\r\n");
      out.write("\r\n");
      out.write("			var email = $(\".mail_input\").val(); // 입력한 이메일\r\n");
      out.write("			var checkBox = $(\".mail_check_input\"); // 인증번호 입력란\r\n");
      out.write("			var boxWrap = $(\".mail_check_input_box\"); // 인증번호 입력란 박스\r\n");
      out.write("			var warnMsg = $(\".mail_input_box_warn\"); // 이메일 입력 경고글\r\n");
      out.write("\r\n");
      out.write("			/* 이메일 형식 유효성 검사 */\r\n");
      out.write("			if (mailFormCheck(email)) {\r\n");
      out.write("				warnMsg.html(\"이메일이 전송 되었습니다. 이메일을 확인해주세요.\");\r\n");
      out.write("				warnMsg.css(\"display\", \"inline-block\");\r\n");
      out.write("			} else {\r\n");
      out.write("				warnMsg.html(\"올바르지 못한 이메일 형식입니다.\");\r\n");
      out.write("				warnMsg.css(\"display\", \"inline-block\");\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			$.ajax({\r\n");
      out.write("\r\n");
      out.write("				type : \"GET\",\r\n");
      out.write("				url : \"mailCheck?email=\" + email,\r\n");
      out.write("				success : function(data) {\r\n");
      out.write("\r\n");
      out.write("					//console.log(\"data : \" + data);\r\n");
      out.write("					checkBox.attr(\"disabled\", false);\r\n");
      out.write("					boxWrap.attr(\"id\", \"mail_check_input_box_true\");\r\n");
      out.write("					code = data;\r\n");
      out.write("\r\n");
      out.write("				}\r\n");
      out.write("\r\n");
      out.write("			});\r\n");
      out.write("\r\n");
      out.write("		});\r\n");
      out.write("		/* 인증번호 비교 */\r\n");
      out.write("		$(\".mail_check_input\").blur(function() {\r\n");
      out.write("\r\n");
      out.write("			var inputCode = $(\".mail_check_input\").val(); // 입력코드	\r\n");
      out.write("			var checkResult = $(\"#mail_check_input_box_warn\"); // 비교 결과 	\r\n");
      out.write("\r\n");
      out.write("			if (inputCode == code) { // 일치할 경우\r\n");
      out.write("				checkResult.html(\"인증번호가 일치합니다.\");\r\n");
      out.write("				checkResult.attr(\"class\", \"correct\");\r\n");
      out.write("				mailnumCheck = true;\r\n");
      out.write("			} else { // 일치하지 않을 경우\r\n");
      out.write("				checkResult.html(\"인증번호를 다시 확인해주세요.\");\r\n");
      out.write("				checkResult.attr(\"class\", \"incorrect\");\r\n");
      out.write("				mailnumCheck = false;\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("		});\r\n");
      out.write("		/* 다음 주소 연동 */\r\n");
      out.write("		function execution_daum_address() {\r\n");
      out.write("\r\n");
      out.write("			new daum.Postcode(\r\n");
      out.write("					{\r\n");
      out.write("						oncomplete : function(data) {\r\n");
      out.write("							// 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분입니다.\r\n");
      out.write("\r\n");
      out.write("							// 각 주소의 노출 규칙에 따라 주소를 조합한다.\r\n");
      out.write("							// 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\r\n");
      out.write("							var addr = ''; // 주소 변수\r\n");
      out.write("							var extraAddr = ''; // 참고항목 변수\r\n");
      out.write("							//사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.\r\n");
      out.write("							if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우\r\n");
      out.write("								addr = data.roadAddress;\r\n");
      out.write("							} else { // 사용자가 지번 주소를 선택했을 경우(J)\r\n");
      out.write("								addr = data.jibunAddress;\r\n");
      out.write("							}\r\n");
      out.write("							// 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.\r\n");
      out.write("							if (data.userSelectedType === 'R') {\r\n");
      out.write("								// 법정동명이 있을 경우 추가한다. (법정리는 제외)\r\n");
      out.write("								// 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\r\n");
      out.write("								if (data.bname !== ''\r\n");
      out.write("										&& /[동|로|가]$/g.test(data.bname)) {\r\n");
      out.write("									extraAddr += data.bname;\r\n");
      out.write("								}\r\n");
      out.write("								// 건물명이 있고, 공동주택일 경우 추가한다.\r\n");
      out.write("								if (data.buildingName !== ''\r\n");
      out.write("										&& data.apartment === 'Y') {\r\n");
      out.write("									extraAddr += (extraAddr !== '' ? ', '\r\n");
      out.write("											+ data.buildingName\r\n");
      out.write("											: data.buildingName);\r\n");
      out.write("								}\r\n");
      out.write("								// 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n");
      out.write("								if (extraAddr !== '') {\r\n");
      out.write("									extraAddr = ' (' + extraAddr + ')';\r\n");
      out.write("								}\r\n");
      out.write("								// 주소변수 문자열과 참고항목 문자열 합치기\r\n");
      out.write("								addr += extraAddr;\r\n");
      out.write("\r\n");
      out.write("							} else {\r\n");
      out.write("								addr += ' ';\r\n");
      out.write("							}\r\n");
      out.write("							// 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n");
      out.write("							$(\".address_input_1\").val(data.zonecode);\r\n");
      out.write("							//$(\"[name=memberAddr1]\").val(data.zonecode);	// 대체가능\r\n");
      out.write("							$(\".address_input_2\").val(addr);\r\n");
      out.write("							//$(\"[name=memberAddr2]\").val(addr);			// 대체가능\r\n");
      out.write("							// 상세주소 입력란 disabled 속성 변경 및 커서를 상세주소 필드로 이동한다.\r\n");
      out.write("							$(\".address_input_3\").attr(\"readonly\", false);\r\n");
      out.write("							$(\".address_input_3\").focus();\r\n");
      out.write("\r\n");
      out.write("						}\r\n");
      out.write("					}).open();\r\n");
      out.write("\r\n");
      out.write("		}\r\n");
      out.write("		/* 비밀번호 확인 일치 유효성 검사 */\r\n");
      out.write("		$('.pwck_input').on(\"propertychange change keyup paste input\",\r\n");
      out.write("				function() {\r\n");
      out.write("\r\n");
      out.write("					var pw = $('.pw_input').val();\r\n");
      out.write("					var pwck = $('.pwck_input').val();\r\n");
      out.write("					$('.final_pwck_ck').css('display', 'none');\r\n");
      out.write("\r\n");
      out.write("					if (pw == pwck) {\r\n");
      out.write("						$('.pwck_input_re_1').css('display', 'block');\r\n");
      out.write("						$('.pwck_input_re_2').css('display', 'none');\r\n");
      out.write("						pwckcorCheck = true;\r\n");
      out.write("					} else {\r\n");
      out.write("						$('.pwck_input_re_1').css('display', 'none');\r\n");
      out.write("						$('.pwck_input_re_2').css('display', 'block');\r\n");
      out.write("						pwckcorCheck = false;\r\n");
      out.write("					}\r\n");
      out.write("\r\n");
      out.write("				});\r\n");
      out.write("		/* 입력 이메일 형식 유효성 검사 */\r\n");
      out.write("		function mailFormCheck(email) {\r\n");
      out.write("			var form = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\r\n");
      out.write("			return form.test(email);\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("		/* gnb_area 로그아웃 버튼 작동 */\r\n");
      out.write("		$(\"#gnb_logout_button\").click(function() {\r\n");
      out.write("			//alert(\"버튼 작동\");\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type : \"POST\",\r\n");
      out.write("				url : \"/member/logout.do\",\r\n");
      out.write("				success : function(data) {\r\n");
      out.write("					alert(\"로그아웃 성공\");\r\n");
      out.write("					document.location.reload();\r\n");
      out.write("				}\r\n");
      out.write("			}); // ajax     \r\n");
      out.write("		});\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/member/join.jsp(28,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member == null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				<li class=\"navbar__menu__item \"><a href=\"/main\" style = \"color: white;\">Home</a></li>\r\n");
          out.write("				<li class=\"navbar__menu__item active\"><a href=\"/board/list\" style = \"color: white;\">게시판</li>\r\n");
          out.write("				<li class=\"navbar__menu__item\"><a href=\"/member/login\" style = \"color: white;\">로그인</a></li>\r\n");
          out.write("				<li class=\"navbar__menu__item\"><a href=\"/member/join\" style = \"color: white;\">회원가입</a></li>\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/member/join.jsp(35,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member != null }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				");
          if (_jspx_meth_c_005fif_005f2(_jspx_th_c_005fif_005f1, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("				<a href=\"/main\"><li class=\"navbar__menu__item \">Home</li></a>\r\n");
          out.write("\r\n");
          out.write("				<a href=\"/board/list\"><li class=\"navbar__menu__item active\">게시판</li></a>\r\n");
          out.write("				<li class=\"navbar__menu__item\"><a id=\"gnb_logout_button\">로그아웃</a></li>\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
      // /WEB-INF/views/member/join.jsp(36,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.adminCk == 1 }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("					<a href=\"/admin/main\"><li class=\"navbar__menu__item \">관리자\r\n");
          out.write("							페이지</li></a>\r\n");
          out.write("				");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }
}
